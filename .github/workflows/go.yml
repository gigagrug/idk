name: Build & Release Schema

on:
  workflow_dispatch:
    inputs:
      version:
        type: string
        description: "Version (e.g. 0.1.0)"
        required: true

jobs:
  build:
    name: Build ${{ matrix.goos }}-${{ matrix.goarch }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        goos: [windows, linux]
        goarch: [amd64]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: "stable"

      - name: Build schema binary
        run: |
          mkdir -p dist
          go mod tidy
          ext=""
          if [ "${{ matrix.goos }}" == "windows" ]; then ext=".exe"; fi
          output_name=schema-${{ matrix.goos }}-${{ matrix.goarch }}$ext
          GOOS=${{ matrix.goos }} GOARCH=${{ matrix.goarch }} CGO_ENABLED=0 go build -ldflags "-X main.version=${{ inputs.version }}" -o dist/$output_name .
        shell: bash

      - name: Upload binary
        uses: actions/upload-artifact@v4
        with:
          name: schema-${{ matrix.goos }}-${{ matrix.goarch }}
          path: dist/*

  release:
    name: Create GitHub Release
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: dist

      - name: Display downloaded files (optional)
        run: ls -R dist

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ inputs.version }}
          name: ${{ inputs.version }}
          body: Release ${{ inputs.version }}
          files: dist/**/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
