name: Manual Build & Release Schema

on:
  workflow_dispatch:
    inputs:
      version:
        type: string
        description: "Version (e.g., 0.1.0)"
        required: true

jobs:
  build:
    name: Build schema for ${{ matrix.goos }}-${{ matrix.goarch }}
    runs-on: ubuntu-latest

    strategy:
      matrix:
        goos: [linux, windows, darwin]
        goarch: [amd64, arm64]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.24.3"

      - name: Build schema binary
        run: |
          mkdir -p dist/${{ matrix.goos }}-${{ matrix.goarch }}
          ext=""
          if [ "${{ matrix.goos }}" = "windows" ]; then ext=".exe"; fi
          GOOS=${{ matrix.goos }} GOARCH=${{ matrix.goarch }} go build -o dist/${{ matrix.goos }}-${{ matrix.goarch }}/schema$ext .

      - name: Archive binary
        run: |
          cd dist/${{ matrix.goos }}-${{ matrix.goarch }}
          VERSION=${{ inputs.version }}
          if [ "${{ matrix.goos }}" = "windows" ]; then
            zip ../schema-${VERSION}-${{ matrix.goos }}-${{ matrix.goarch }}.zip schema.exe
          else
            tar -czf ../schema-${VERSION}-${{ matrix.goos }}-${{ matrix.goarch }}.tar.gz schema
          fi

      - name: Create GitHub Release & Upload Assets
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ inputs.version }}
          name: ${{ inputs.version }}
          files: dist/schema-${{ inputs.version }}-${{ matrix.goos }}-${{ matrix.goarch }}.*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
